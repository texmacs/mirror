;;;; srfi-88.test --- Test suite for SRFI-88               -*- Scheme -*-
;;;; Ludovic Courtès <ludo@gnu.org>
;;;;
;;;; 	Copyright (C) 2008 Free Software Foundation, Inc.
;;;;
;;;; This program is free software; you can redistribute it and/or modify
;;;; it under the terms of the GNU General Public License as published by
;;;; the Free Software Foundation; either version 2, or (at your option)
;;;; any later version.
;;;;
;;;; This program is distributed in the hope that it will be useful,
;;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;;; GNU General Public License for more details.
;;;;
;;;; You should have received a copy of the GNU General Public License
;;;; along with this software; see the file COPYING.  If not, write to
;;;; the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
;;;; Boston, MA 02110-1301 USA

(define-module (test-srfi-88)
  :use-module (test-suite lib)
  :use-module (srfi srfi-88))


;; Most of the test cases are taken from SRFI-88.

(with-test-prefix "srfi-88"

  (pass-if "cond-expand"
    (cond-expand (srfi-88 #t)
                 (else    #f)))

  (pass-if "keyword?"
    (and (keyword? 'foo:)
         (keyword? foo:)
         (not (keyword? 'foo))
         (not (keyword? ':))
         (keyword? (car '(a: b:)))
         (not (keyword? "bar"))))

  (pass-if "keyword->string"
    (and (string=? (keyword->string foo:) "foo")
         (string=? "a b c"
                   (keyword->string (string->keyword "a b c")))))

  (pass-if "string->keyword"
    (eq? (string->keyword "foo") foo:))

  (pass-if "empty keyword"
    ;; XXX: We don't currently support syntax of the form
    ;; `#{extended symbol}#:'.
    (string=? ""
              (keyword->string (string->keyword "")))))


;;; Local Variables:
;;; coding: latin-1
;;; End:
